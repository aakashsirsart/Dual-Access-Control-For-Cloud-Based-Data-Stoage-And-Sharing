/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dualaccesscontrol;

import java.awt.Component;
import java.io.File;
import java.io.FileInputStream;
import java.math.BigInteger;
import java.security.SignatureException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Elcot
 */
public class DataOwnerFrame extends javax.swing.JFrame {

    /**
     * Creates new form DataOwnerFrame
     */
    String oname;
    DBConnection dbn=new DBConnection();
    Statement st=dbn.stt;
    ArrayList Blocks=new ArrayList();
    ArrayList Tags=new ArrayList();
    
    public DataOwnerFrame(String na) {
        initComponents();
        oname=na;
        viewDetails();
    }
    
    public final void viewDetails()
    {
        try
        {                                                            
            ResultSet rs=st.executeQuery("select * from KeyRequest where DataOwnerName='"+oname.trim()+"'");
            if(rs.next())
            {
                String publickey=rs.getString(2);
                String privatekey=rs.getString(3);
                if(!(publickey.trim().equals("-")))
                {                    
                    jTextField2.setText(publickey.trim());
                    jTextField2.setEditable(false);
                    jTextField3.setText(privatekey.trim());
                    jTextField3.setEditable(false);
                    jButton8.setEnabled(false);
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        try
        {
            ArrayList norep=new ArrayList();
            ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"'");
            while(rs.next())
            {
                String don=rs.getString(1);
                String fn=rs.getString(2);
                if(!(norep.contains(fn.trim())))
                {
                    jComboBox1.addItem(fn.trim());
                    norep.add(fn.trim());
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 153));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Data Owner");

        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(165, 165, 165)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jButton8.setText("Send Key Request to Trusted Authority (TA)");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel5.setText("Public Key");

        jLabel6.setText("Private Key");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3))
                .addGap(34, 34, 34))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5)))
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addGap(28, 28, 28)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Key Request", jPanel4);

        jLabel9.setText("Choose Age:");

        jLabel10.setText("Choose District:");

        jLabel11.setText("Choose Qualification:");

        jButton12.setText("Set Access Control");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Clear");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "=", "<=", ">=" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ahmednagar", "Akola", "Amravati", "Aurangabad", "Beed", "Bhandara", "Buldhana", "Chandrapur", "Dhule", "Gadchiroli", "Gondia", "Hingoli", "Jalgaon", "Jalna", "Kolhapur", "Latur", "Mumbai City", "Mumbai Suburban", "Nagpur", "Nanded", "Nandurbar", "Nashik", "Osmanabad", "Palghar", "Parbhani", "Pune", "Raigad", "Ratnagiri", "Sangli", "Satara", "Sindhudurg", "Solapur", "Thane", "Wardha", "Washim", "Yavatmal", "" }));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BSc", "BCom", "BBA", "BCA", "BE", "MSc", "MCom", "MBA", "MCA", "ME", "MPhil", "Phd" }));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Access Control", jPanel6);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Choose Filename for Modify", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 102, 0))); // NOI18N

        jLabel3.setText("Choose Filename:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<--Select-->" }));

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel4.setText("Enter the Filename:");

        jButton3.setText("Browse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Upload");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("Split File into Blocks");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(16, 16, 16)))
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton7)
                    .addComponent(jButton6))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("File Upload", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:        
        jTextField1.setText("");
        jTextArea1.setText("");
        
        try
        {
            jComboBox1.removeAllItems();
            jComboBox1.addItem("<--Select-->");
            
            ArrayList norep=new ArrayList();
            ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"'");
            while(rs.next())
            {
                String don=rs.getString(1);
                String fn=rs.getString(2);
                if(!(norep.contains(fn.trim())))
                {
                    jComboBox1.addItem(fn.trim());
                    norep.add(fn.trim());
                }
            }  
            jComboBox1.setSelectedIndex(0);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc=new JFileChooser();
            int result=fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) 
            {
                File file=fc.getSelectedFile();				
                jTextField1.setText(file.getName());                 
                
                String fname=file.getAbsolutePath();
                File fe=new File(fname);                 
                FileInputStream fis=new FileInputStream(fe);
                byte data[]=new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str=new String(data);
		jTextArea1.setText(str);                
            }
            else if (result == JFileChooser.CANCEL_OPTION) 
            {
                JOptionPane.showMessageDialog(this,"Open Command cancelled by user.");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
            /* Algorithm 2 SigTagGen */
        
        String filename=jTextField1.getText().trim();
        String forblockname[]=filename.trim().split("\\.");
        String filenamewithoutext=forblockname[0].trim();
        String extension=forblockname[1].trim();
        
        String publickey=jTextField2.getText().trim();
        String[] s5 = publickey.trim().split(",");
        String e = s5[0];
        String n = s5[1];
        
        try
        {
            jTextArea1.setText("");
            for(int j=0;j<Blocks.size();j++)
            {
                jTextArea1.append("=================================================\n       Block - "+(j+1)+"\n=================================================\n");
            
                String blockname=filenamewithoutext+""+(j+1)+"."+extension.trim();
                String block=Blocks.get(j).toString().trim();
                String tag=Tags.get(j).toString().trim();
            
                String ce = "";
                char ch[]=block.toCharArray();
                for(int i=0;i<ch.length;i++)
                {
                    char c=ch[i];                    
                    System.out.println((int)c);                    
                    BigInteger orig = BigInteger.valueOf((int)c);
                    String ci = orig.modPow(new BigInteger(e), new BigInteger(n)).toString();
                    ce = ce + ci + ",";
                }
                String cipblock = ce.substring(0, ce.lastIndexOf(','));
                Blocks.set(j,cipblock.trim());
            
                Signature sg=new Signature();				
                String sign=sg.calculateRFC2104HMAC(cipblock.trim(),blockname.trim());
                JOptionPane.showMessageDialog(this, "Block - "+(j+1)+" Encrypted Successfully!");
                jTextArea1.append(cipblock.trim()+"\n");
                //JOptionPane.showMessageDialog(this, "Signature Generated for Block - "+(j+1)+" Successfully!");
                //jTextArea1.append("Signature: "+sign.trim()+"\n");
                jTextArea1.append("Tag: "+tag.trim()+"\n\n");
                
                ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"' and BlockName='"+blockname.trim()+"'");
                if(rs.next())
                {  
                    
                }
                else
                {
                    st.executeUpdate("insert into Upload values('"+oname.trim()+"','"+filename.trim()+"','"+(j+1)+"','"+blockname.trim()+"','"+cipblock.trim()+"','"+sign.trim()+"','"+tag.trim()+"')");                    
                    JOptionPane.showMessageDialog(this, "Block - "+(j+1)+" Uploaded Successfully!");
                }                
            }
        }
        catch(Exception e1)
        {
            e1.printStackTrace();
        }        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        try
        {                                                            
            ResultSet rs=st.executeQuery("select * from KeyRequest where DataOwnerName='"+oname.trim()+"'");
            if(rs.next())
            {
                String publickey=rs.getString(2);
                String privatekey=rs.getString(3);
                if(!(publickey.trim().equals("-")))
                {
                    JOptionPane.showMessageDialog(this, "Keys are already Generated!");  
                    jTextField2.setText(publickey.trim());
                    jTextField2.setEditable(false);
                    jTextField3.setText(privatekey.trim());
                    jTextField3.setEditable(false);
                    jButton8.setEnabled(false);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Key Request already sent to TA!"); 
                }
            }
            else
            {                                
                st.executeUpdate("insert into KeyRequest values('"+oname.trim()+"','"+"-"+"','"+"-"+"')");
                JOptionPane.showMessageDialog(this, "Key Request has been sent to TA Successfully!");                                                    
                jButton8.setEnabled(false);
            }        
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String filename=jTextField1.getText().trim();
        String filecontent=jTextArea1.getText().trim();
        
        int a=3;
		
        System.out.println("s.length(): "+filecontent.length());
	System.out.println("s.length()/a: "+filecontent.length()/a);
	System.out.println();
	ArrayList ar=splitByLength(filecontent,(filecontent.length()/a));		
	System.out.println();
	if(ar.size()>a)
	{
            String ri=ar.get(a-1).toString().trim();
            for(int i=a;i<ar.size();i++)
            {
		ri=ri+ar.get(i).toString().trim();
            }
            ar.set((a-1),ri.trim());
            for(int i=a;i<ar.size();i++)
            {
		ar.remove(i);
            }
	}
	
        Blocks=new ArrayList();
        Tags=new ArrayList();
        jTextArea1.setText("");
        
        for(int i=0;i<ar.size();i++)
        {
            jTextArea1.append("=================================================\n       Block - "+(i+1)+"\n=================================================\n");
            String s=ar.get(i).toString().trim();
            Blocks.add(s.trim());
            String tag=JOptionPane.showInputDialog(this,"Enter the Tag for Block - "+(i+1)+": ");
            Tags.add(tag.trim());            
            jTextArea1.append(s.trim()+"\n");
            jTextArea1.append("Tag: "+tag.trim()+"\n\n");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String filename=jComboBox1.getSelectedItem().toString().trim();
        
        String privatekey=jTextField3.getText().trim();
        String[] s = privatekey.trim().split(",");
        String d = s[0];
        String n = s[1];
        
        try
        {
            String file = "";
            ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"' and FileName='"+filename.trim()+"'");
            while(rs.next())
            {
                String don=rs.getString(1);
                String fn=rs.getString(2);
                String index=rs.getString(3);
                String bn=rs.getString(4);
                String cbc=rs.getString(5);
                String sign=rs.getString(6);
                String tag=rs.getString(7);
                
                String[] cip = cbc.trim().split(",");                    
                for (int i = 0; i < cip.length; i++)
                {                        
                    String dec = new BigInteger(cip[i]).modPow(new BigInteger(d), new BigInteger(n)).toString();                                            
                    int ascii = Integer.parseInt(dec.trim());
                    char ori=(char)ascii;                    
                    file = file + ori;
                }
            }
            jTextField1.setText(filename.trim());
            jTextArea1.setText(file.trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String filename=jTextField1.getText().trim();
        String forblockname[]=filename.trim().split("\\.");
        String filenamewithoutext=forblockname[0].trim();
        String extension=forblockname[1].trim();
        
        String publickey=jTextField2.getText().trim();
        String[] s5 = publickey.trim().split(",");
        String e = s5[0];
        String n = s5[1];
        
        try
        {
            st.execute("delete from Upload where DataOwnerName='"+oname.trim()+"' and FileName='"+filename.trim()+"'");
            
            jTextArea1.setText("");
            for(int j=0;j<Blocks.size();j++)
            {
                jTextArea1.append("=================================================\n       Block - "+(j+1)+"\n=================================================\n");
            
                String blockname=filenamewithoutext+""+(j+1)+"."+extension.trim();
                String block=Blocks.get(j).toString().trim();
                String tag=Tags.get(j).toString().trim();
            
                String ce = "";
                char ch[]=block.toCharArray();
                for(int i=0;i<ch.length;i++)
                {
                    char c=ch[i];                    
                    System.out.println((int)c);                    
                    BigInteger orig = BigInteger.valueOf((int)c);
                    String ci = orig.modPow(new BigInteger(e), new BigInteger(n)).toString();
                    ce = ce + ci + ",";
                }
                String cipblock = ce.substring(0, ce.lastIndexOf(','));
                Blocks.set(j,cipblock.trim());
            
                Signature sg=new Signature();				
                String sign=sg.calculateRFC2104HMAC(cipblock.trim(),blockname.trim());
                JOptionPane.showMessageDialog(this, "Block - "+(j+1)+" Encrypted Successfully!");
                jTextArea1.append(cipblock.trim()+"\n");
                JOptionPane.showMessageDialog(this, "Signature Generated for Block - "+(j+1)+" Successfully!");
                jTextArea1.append("Signature: "+sign.trim()+"\n");
                jTextArea1.append("Tag: "+tag.trim()+"\n\n");
                
                ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"' and BlockName='"+blockname.trim()+"'");
                if(rs.next())
                {  
                    
                }
                else
                {
                    st.executeUpdate("insert into Upload values('"+oname.trim()+"','"+filename.trim()+"','"+(j+1)+"','"+blockname.trim()+"','"+cipblock.trim()+"','"+sign.trim()+"','"+tag.trim()+"')");
                    JOptionPane.showMessageDialog(this, "Block - "+(j+1)+" Updated Successfully!");
                }                
            }
        }
        catch(Exception e1)
        {
            e1.printStackTrace();
        } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String filename=jTextField1.getText().trim();
        
        try
        {
            st.execute("delete from Upload where DataOwnerName='"+oname.trim()+"' and FileName='"+filename.trim()+"'");
            JOptionPane.showMessageDialog(this,"Deleted Successfully!");            
            jTextField1.setText("");
            jTextArea1.setText("");
            jComboBox1.removeAllItems();
            jComboBox1.addItem("<--Select-->");
            
            ArrayList norep=new ArrayList();
            ResultSet rs=st.executeQuery("select * from Upload where DataOwnerName='"+oname.trim()+"'");
            while(rs.next())
            {
                String don=rs.getString(1);
                String fn=rs.getString(2);
                if(!(norep.contains(fn.trim())))
                {
                    jComboBox1.addItem(fn.trim());
                    norep.add(fn.trim());
                }
            }  
            jComboBox1.setSelectedIndex(0);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String symbol1=jComboBox3.getSelectedItem().toString().trim();
        String age=jComboBox4.getSelectedItem().toString().trim();
        String symbol2=jComboBox7.getSelectedItem().toString().trim();
        String district=jComboBox5.getSelectedItem().toString().trim();
        String symbol3=jComboBox8.getSelectedItem().toString().trim();
        String qualification=jComboBox6.getSelectedItem().toString().trim();
        
        String accessControl=symbol1+"@"+age+"@"+symbol2+"@"+district+"@"+symbol3+"@"+qualification;
        try
        {
            st.execute("delete from AccessControl where DataOwnerName='"+oname+"'");
            st.executeUpdate("insert into AccessControl values('"+oname.trim()+"','"+accessControl.trim()+"')");
            JOptionPane.showMessageDialog(this,"Access Control Successfully Set!");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataOwnerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataOwnerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataOwnerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataOwnerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new DataOwnerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    public static ArrayList splitByLength(String s, int chunkSize)  
    {          
	ArrayList ar=new ArrayList();
		        
        for(int i=0; i<s.length();i=i+chunkSize)  
        {  
            if(s.length()-i<chunkSize)  
            {                  				 
		ar.add(s.substring(i).trim());
            }   
            else  
            {                 
		ar.add(s.substring(i, i+chunkSize).trim());
            }  
        } 
						
        return ar;  
    } 

    public static class Signature 
    {
	private static final String HMAC_SHA1_ALGORITHM = "HmacSHA1";

	public static String calculateRFC2104HMAC(String data, String key) throws java.security.SignatureException
	{
		String result;
		try 
		{
			// get an hmac_sha1 key from the raw key bytes
			SecretKeySpec signingKey = new SecretKeySpec(key.getBytes(), HMAC_SHA1_ALGORITHM);

			// get an hmac_sha1 Mac instance and initialize with the signing key
			Mac mac = Mac.getInstance(HMAC_SHA1_ALGORITHM);
			mac.init(signingKey);

			// compute the hmac on input data bytes
			byte[] rawHmac = mac.doFinal(data.getBytes());

			// base64-encode the hmac
			//result = Encoding.EncodeBase64(rawHmac);
			result = new String(encode(rawHmac));
                        
                        System.out.println();

		}
		catch (Exception e) 
		{
			throw new SignatureException("Failed to generate HMAC : " + e.getMessage());
		}
		return result;
	}	
	
	private static char[] encode(byte[] bytes) {
    final int amount = bytes.length;
    char[] result = new char[2 * amount];

    int j = 0;
    for (int i = 0; i < amount; i++) {
      result[j++] = HEX[(0xF0 & bytes[i]) >>> 4];
      result[j++] = HEX[(0x0F & bytes[i])];
    }

    return result;
  }

  private static final char[] HEX = {
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
  };
}

    static class WordWrapCellRenderer extends JTextArea implements TableCellRenderer
    {
        WordWrapCellRenderer() 
        {
            setLineWrap(true);
            setWrapStyleWord(true);
        }
        
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) 
        {                        
            String contentvalue=value.toString();
            setText(contentvalue.trim());
            
            setSize(table.getColumnModel().getColumn(column).getWidth(), getPreferredSize().height);
            if (table.getRowHeight(row) != getPreferredSize().height) 
            {
                table.setRowHeight(row, getPreferredSize().height);
            }
            return this;
        }
    }
}
